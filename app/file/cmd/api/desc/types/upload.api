syntax = "v1"

info(
  title: "上传"
  desc: "文件上传"
  author: ""
  email: ""
  version: ""
)

type FileMeta {
  Id uint64 `json:"id"`
  Hash string `json:"hash"`
  Size int64 `json:"size"`
  Path string `json:"path"`
  Status int `json:"status"`
}

type FileUesrRelation {
  Id uint64 `json:"id"`
  UserId uint64 `json:"user_id"`
  FileId uint64 `json:"file_id"`
  FilenameAlias string `json:"filename_alias"`
  Status int `json:"status"`
}

type InitFileMetaReq {
  Hash string `json:"hash"`
  FileSize uint64 `json:"file_size"`
  ChunkSize uint64 `json:"chunk_size"`
  FilenameAlias string `json:"filename_alias"`
}
type InitFileMetaResp {
  Hash string `json:"hash"`
  ChunkSize uint64 `json:"chunk_size"`
  ChunkCount int `json:"chunk_count"`
}

type QuickTransmissionReq {
  Hash string `json:"hash"`
  FilenameAlias string `json:"filename_alias"`
}
type QuickTransmissionResp {
}

type UploadChunkReq {
  FileHash string `form:"file_hash"`
  ChunkIndex int `form:"chunk_index"`
  ChunkSize uint64 `form:"chunk_size"`
  ChunkHash string `form:"chunk_hash"`
//  ChunkData  multipart.FileHeader `form:"chunk_data"`
}
type UploadChunkResp {
}

type CompleteUploadReq {
  FileHash string `json:"file_hash"`
}
type CompleteUploadResp {
}
